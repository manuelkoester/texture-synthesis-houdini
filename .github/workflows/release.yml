# This is a basic workflow that is manually triggered

name: Release

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
# on:
#   workflow_dispatch:
#     # Inputs the workflow accepts.
#     inputs:
#       major:
#         description: 'Major Version'
#         required: true
#       minor:
#         description: 'Minor Version'
#         required: true
#       fix:
#         description: 'Fix Version'
#         required: true
on:
  push:
    tags:
    - '*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  release:
    name: Release
    strategy:
        matrix:
          #os: [ubuntu-latest, macOS-latest, windows-latest]
          os: [ ubuntu-latest ]
          include:
            - os: ubuntu-latest
              rust: stable
              target: x86_64-unknown-linux-musl
              bin: texture-synthesis
              # We don't enable the progress feature when targeting
              # musl since there are some dependencies on shared libs
              features: ""
            # - os: windows-latest
            #   rust: stable
            #   target: x86_64-pc-windows-msvc
            #   bin: texture-synthesis.exe
            #   features: --features=progress
            # - os: macOS-latest
            #   rust: stable
            #   target: x86_64-apple-darwin
            #   bin: texture-synthesis
            #   features: --features=progress
    runs-on: ${{ matrix.os }}
    steps:
      # - name: Install stable toolchain
      #   uses: actions-rs/toolchain@v1
      #   with:
      #     toolchain: ${{ matrix.rust }}
      #     override: true
      #     target: ${{ matrix.target }}
      # - name: Install build deps
      #   if: matrix.os == 'ubuntu-latest'
      #   run: |
      #     sudo apt-get install -y musl-tools
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      # - name: cargo fetch
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: fetch
      #     args: --manifest-path texture-synthesis/cli/Cargo.toml --target ${{ matrix.target }}
      # - name: Release build
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: build
      #     args: --manifest-path texture-synthesis/cli/Cargo.toml --release --target ${{ matrix.target }} ${{ matrix.features }}
      - name: Package
        shell: bash
        run: |
          name=texture-synthesis-houdini
          tag=$(git describe --tags --abbrev=0)
          release_name="$name-$tag-${{ matrix.target }}"

          # Archive in .zip for Windows, .tar.gz for other platforms
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            release_archive="${release_name}.zip"
          else
            release_archive="${release_name}.tar.gz"
          fi
          mkdir "$release_name"

          # if [ "${{ matrix.target }}" != "x86_64-pc-windows-msvc" ]; then
          #     strip "texture-synthesis/target/${{ matrix.target }}/release/${{ matrix.bin }}"
          # fi

          #cp "texture-synthesis/target/${{ matrix.target }}/release/${{ matrix.bin }}" "$release_name"
          #rm -r texture-synthesis/target
          ls
          ls -l
          cp "texture-synthesis/LICENSE-MIT" "$release_name/bin"

          shopt -s extglob
          cp -r !($release_name) $release_name

          # Archive in .zip for Windows, .tar.gz for other platforms
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            7z a "$release_archive" "$release_name"
          else
            tar czvf "$release_archive" "$release_name"
          fi

          rm -r "$release_name"
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            "texture-synthesis-houdini*.tar.gz"
            "texture-synthesis-houdini*.zip"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}